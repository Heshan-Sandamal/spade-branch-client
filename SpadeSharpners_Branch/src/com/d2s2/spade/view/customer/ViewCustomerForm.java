/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.d2s2.spade.view.customer;

import com.d2s2.spade.controllers.CustomerController;
import com.d2s2.spade.models.Customer;
import java.awt.ScrollPane;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Tharindu Diluksha
 */
public class ViewCustomerForm extends javax.swing.JDialog {

    /**
     * Creates new form ViewCustomerForm
     */
    private DefaultTableModel defaulttablemodel;
    private JTable customerTable;
    private JScrollPane scrollpane;
    private ArrayList<Customer> customerList;
    
    public ViewCustomerForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        customerList = new ArrayList<>();
        
        /* creating customer table with specified properties*/
        customerTable = new JTable() {
        @Override
        public boolean isCellEditable(int row, int column) {                
                return false;               
        };};
        
        customerTable.setCellSelectionEnabled(false);
        customerTable.setSelectionMode(0);
        customerTable.setRowSelectionAllowed(true);
        customerTable.setDragEnabled(false);
        customerTable.getTableHeader().setReorderingAllowed(false);
        customerTable.getTableHeader().setResizingAllowed(false);
        customerTable.setBounds(45, 60, 500, 700);
        /* end of customizing table properties*/
        
        
        scrollpane = new JScrollPane();
        scrollpane.setBounds(45, 60, 500, 400);
        
        try {
            TableInit();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Unable to view due to CLASS "+ex.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(ViewCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Unable to view due to SQL "+ex.getMessage());
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("  Customers");

        updateButton.setText("Update");

        viewButton.setText("View");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(updateButton)
                .addGap(62, 62, 62))
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(266, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 426, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewButton)
                    .addComponent(updateButton))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ViewCustomerForm dialog = new ViewCustomerForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables

    /* Initializing table with data and headings */
    private void TableInit() throws ClassNotFoundException,SQLException
    {
        defaulttablemodel = new DefaultTableModel(0,0);
        String[] tableHeaders = new String[] {"CustomerID","Name","Balance"};
        defaulttablemodel.setColumnIdentifiers(tableHeaders);
        customerTable.setModel(defaulttablemodel);
        
        customerList = CustomerController.viewCustomers();
        
        /* customer table data */
        for (int i=0; i<customerList.size();i++){
            Vector<Object> customerData = new Vector<Object>();
            customerData.add(customerList.get(i).getCustomerId());
            customerData.add(customerList.get(i).getName());
            customerData.add("Balance"+i);
            
            defaulttablemodel.addRow(customerData);
        }
        
        
        /*for (int i=0; i<50; i++){
            Vector<Object> data = new Vector<Object>();
            data.add("000"+i);
            data.add("Customer"+i);
            data.add("Balance"+i);
            defaulttablemodel.addRow(data);
        }*/
        
        

        scrollpane.setViewportView(customerTable);
        add(scrollpane);



    }




}
