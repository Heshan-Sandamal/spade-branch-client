/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.d2s2.spade.view.supplier;

import com.d2s2.spade.controllers.supplier.SupplierController;
import com.d2s2.spade.models.Supplier;
import com.d2s2.spade.models.SupplierBranch;
import java.awt.Component;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Dimuth Tharaka
 */
public class ViewSupplier extends javax.swing.JDialog {

    /**
     * Creates new form ViewSupplier
     */
    public ViewSupplier(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        try {
            createModel();
            model=addSuppliersToTable(model);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewSupplier.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        idSearchField = new org.jdesktop.swingx.JXSearchField();
        IDrequestLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierDetailsTable = new org.jdesktop.swingx.JXTable();
        updateSupplierButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        contactTable = new org.jdesktop.swingx.JXTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClickHandler(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Keyword"));

        idSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idSearchFieldActionPerformed(evt);
            }
        });
        idSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idSearchFieldKeyReleased(evt);
            }
        });

        IDrequestLabel.setText("Type keyword here");

        searchButton.setText("Search");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDrequestLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(searchButton)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(IDrequestLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("View Supplier");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Supplier Details"));

        supplierDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Address", "Email"
            }
        ));
        supplierDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(supplierDetailsTable);

        updateSupplierButton.setText("Update Supplier Details");
        updateSupplierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSupplierButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(updateSupplierButton)
                        .addGap(23, 23, 23))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(updateSupplierButton))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Contact Information"));

        contactTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Contact Name ", "Telephone Number", "Address", "Branch Name", "Branch ID"
            }
        ));
        jScrollPane2.setViewportView(contactTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(jLabel1)))
                .addContainerGap(324, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, Short.MAX_VALUE))
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mouseClickHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClickHandler
        
        
    }//GEN-LAST:event_mouseClickHandler

    private void idSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idSearchFieldKeyReleased
        filterTableInkeywordSearch();
        
    }//GEN-LAST:event_idSearchFieldKeyReleased

    private void idSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idSearchFieldActionPerformed
        
    }//GEN-LAST:event_idSearchFieldActionPerformed

    private void supplierDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierDetailsTableMouseClicked

        int clickedRow =supplierDetailsTable.rowAtPoint(evt.getPoint());
        contactModel.setRowCount(0);
        createContactModel();
        try {

            contactModel = getSpecificSupplierDetails((String) supplierDetailsTable.getValueAt(clickedRow, 0), contactModel);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewSupplier.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        setTableSorter();

    }//GEN-LAST:event_supplierDetailsTableMouseClicked

    private void updateSupplierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSupplierButtonActionPerformed
        Supplier supplier = new Supplier();
        int clickedRow =supplierDetailsTable.getSelectedRow();   
        
        System.out.println(clickedRow);
        supplier.setSupplierId((String) supplierDetailsTable.getValueAt(clickedRow, 0));
        supplier.setName((String) supplierDetailsTable.getValueAt(clickedRow, 1));
        supplier.setEmail((String) supplierDetailsTable.getValueAt(clickedRow, 2));
        ArrayList<SupplierBranch> supplierBranchList = new ArrayList<SupplierBranch>();
        for (int count = 0; count < model.getRowCount(); count++){
            SupplierBranch supplierBranch = new SupplierBranch();
            supplierBranch.setSupplierId((String) supplierDetailsTable.getValueAt(clickedRow, 0));
            supplierBranch.setBranchName((String) contactModel.getValueAt(count,0));
            supplierBranch.setBranchId((int) contactModel.getValueAt(count,1));
            supplierBranch.setAddress((String) contactModel.getValueAt(count,2));
            supplierBranch.setContactName((String) contactModel.getValueAt(count,3));
            supplierBranch.setTelNo((String) contactModel.getValueAt(count,4));
            supplierBranchList.add(supplierBranch);
        this.dispose();
        JFrame supplierUpdate=null;
            try {
                supplierUpdate = new UpdateSupplier(supplier,supplierBranchList);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ViewSupplier.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ViewSupplier.class.getName()).log(Level.SEVERE, null, ex);
            }
        supplierUpdate.setVisible(true);
        
        } 
    }//GEN-LAST:event_updateSupplierButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewSupplier dialog = new ViewSupplier(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    public void createModel(){
        Object[] columns={"ID","Name", "Address", "Email"};
        model.setColumnIdentifiers(columns);
        setModel(model);
    }
     public void createContactModel(){
        Object[] columns={"Branch Name","Branch ID","Address","Contact Name","Contact No","Supplier ID"};
        contactModel.setColumnIdentifiers(columns);
        setContactModel(contactModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IDrequestLabel;
    private org.jdesktop.swingx.JXTable contactTable;
    private org.jdesktop.swingx.JXSearchField idSearchField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    private org.jdesktop.swingx.JXTable supplierDetailsTable;
    private javax.swing.JButton updateSupplierButton;
    // End of variables declaration//GEN-END:variables
    private Object row[]  = new Object[4];
    private DefaultTableModel contactModel = new DefaultTableModel();
    private DefaultTableModel model = new DefaultTableModel();
    private TableRowSorter<TableModel> sorter;
    private void setModel(DefaultTableModel newmodel){
        supplierDetailsTable.setModel(model);

    }
     private void setContactModel(DefaultTableModel newmodel){
        contactTable.setModel(contactModel);

    }
    private DefaultTableModel addSuppliersToTable(DefaultTableModel newModel) throws ClassNotFoundException, SQLException{
        ArrayList<Supplier> supplierList=SupplierController.getAllSuppliers();
        
      
        
        for (Supplier spl : supplierList) {
             System.out.println(spl.getSupplierId()+spl.getName()+spl.getEmail());
             newModel.addRow(new Object[]{spl.getSupplierId(),spl.getName(),spl.getEmail()});
        }
        return model;
    }
    private DefaultTableModel getSpecificSupplierDetails(String ID, DefaultTableModel model) throws ClassNotFoundException, SQLException{
        ArrayList<SupplierBranch> supplierContactList = SupplierController.getSupplierContactInfo(ID);
        for (SupplierBranch contact : supplierContactList) {
            model.addRow(new Object[]{contact.getBranchName(),contact.getBranchId(),contact.getAddress(),contact.getContactName(),contact.getTelNo()});
            
        }
        return model;
    }
       private void filterTableInkeywordSearch() {
        String text = idSearchField.getText();
         setTableSorter();
       if (text.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(sorter.getRowFilter().regexFilter("^(?i)" + text));
        }
    }
        private void setTableSorter() {
        sorter = new TableRowSorter<>(supplierDetailsTable.getModel());
        supplierDetailsTable.setRowSorter(sorter);
    }
      

   
    
}
